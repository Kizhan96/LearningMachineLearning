import numpy as np
import matplotlib.pyplot as plt

from sklearn import datasets
#
iris = datasets.load_iris()
#
x = iris.data[:,[2,3]]
#
y = iris.target

x.shape #

np.unique(y) #

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.3, random_state = 1, stratify = y)

print('', np.bincount(y))
print('', np.bincount(y_train))


from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
sc.fit(x_train)
x_train_std = sc.transform(x_train)
x_test_std = sc.transform(x_test)

from sklearn.neighbors import KNeighborsClassifier
knn = KNeighborsClassifier(n_neighbors = 5, p = 2, metric = 'minkowski')
knn.fit(x_train_std, y_train)

from mlxtend.plotting import plot_decision_regions
plot_decision_regions(x_combined_std, y_combined, clf = knn)
plt.xlabel('')
plt.ylabel('')
plt.show()

from sklearn.metrics import accuracy_score
#
yp = knn.predict(x_test_std)
#
score = accuracy_score(y_test, yp)
print(np.round(score, 5))





